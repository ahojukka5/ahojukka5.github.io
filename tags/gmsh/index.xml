<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gmsh on Born to be coder.</title>
    <link>https://ahojukka5.github.io/tags/gmsh/</link>
    <description>Recent content in gmsh on Born to be coder.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright Â© 2020, @ahojukka5</copyright>
    <lastBuildDate>Tue, 17 Sep 2019 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://ahojukka5.github.io/tags/gmsh/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Parametric FEM simulations using JuliaFEM and Gmsh</title>
      <link>https://ahojukka5.github.io/2019/2019-09-17-parametric-fem-simulations-using-juliafem-and-gmsh/</link>
      <pubDate>Tue, 17 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ahojukka5.github.io/2019/2019-09-17-parametric-fem-simulations-using-juliafem-and-gmsh/</guid>
      <description>The JuliaFEM project develops open-source software for reliable, scalable, distributed Finite Element Method. Gmsh is an open-source 3D finite element mesh generator with a built-in CAD engine and post-processor. In this blog post, I will demonstrate how to create a simple geometry, mesh it using Gmsh Julia API and transfer the mesh after that to a format JuliaFEM understands. Because the mesh is created programmatically, it is possible to parametrize to make an automatic workflow.</description>
    </item>
    
  </channel>
</rss>
