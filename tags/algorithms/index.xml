<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>algorithms on Jukka Aho (@ahojukka5)</title>
    <link>https://ahojukka5.github.io/tags/algorithms/</link>
    <description>Recent content in algorithms on Jukka Aho (@ahojukka5)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright © 2020, @ahojukka5</copyright>
    <lastBuildDate>Tue, 16 Jun 2020 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://ahojukka5.github.io/tags/algorithms/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Algoritmien benchmarkkaaminen Julialla</title>
      <link>https://ahojukka5.github.io/2020/2020-06-16-benchmarking-algorithms-in-julia/</link>
      <pubDate>Tue, 16 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ahojukka5.github.io/2020/2020-06-16-benchmarking-algorithms-in-julia/</guid>
      <description>&lt;p&gt;Funktioiden benchmarkkaaminen Juliassa on tehty helpoksi erikseen asennttavalla
BenchmarkTools-paketilla. Tarkastellaan seuraavanlaista ongelmaa: käyttäjälle
annetaan kokonaislukulista &lt;code&gt;arr&lt;/code&gt;, ja yksittäinen luku &lt;code&gt;target&lt;/code&gt;. Implementoi
funktio, joka palauttaa indeksiparin &lt;code&gt;(i, j)&lt;/code&gt; siten, että listan alkioiden summa
on &lt;code&gt;target&lt;/code&gt;, siis &lt;code&gt;arr[i] + arr[j] = target&lt;/code&gt;. Kannattaa käyttää hetki aikaa ja
miettiä ratkaisua.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
